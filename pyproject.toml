[project]
name = "m4-2-advanced-middleware-api"
version = "0.1.67"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "arctrl>=3.0.0b3",
  "cryptography>=45.0.6",
  "fastapi>=0.116.1",
  "python-gitlab>=6.2.0",
  "pyyaml>=6.0.2",
  "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
  "fastapi[standard]>=0.116.1",
  "httpx>=0.28.1",
  "pylint>=3.3.8",
  "pytest>=8.4.1",
  "pytest-asyncio>=1.1.0",
  "pytest-cov>=7.0.0",
  "mypy>=1.11.0",
  "bandit>=1.7.0",
  "types-pyyaml>=6.0.12.20250915",
  "pre-commit>=4.0.0",
  "pytest-env>=1.2.0",
]

[tool.ruff]
# Welche Regel-Sets aktiviert sind:
lint.select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort (import sorting)
  "C90", # mccabe (Komplexität)
  "N",   # pep8-naming
  "D",   # pydocstyle (Docstrings)
  "UP",  # pyupgrade
  "B",   # bugbear
  "SIM", # flake8-simplify
]

# Regeln, die du evtl. nicht willst
lint.ignore = [
  "D203", # kein Leerzeile vor Klassen-Docstring
  "D213", # Docstring-Zeilenanfang
]

# Maximale Zeilenlänge wie in pylint (Standard: 100)
line-length = 120

# Formatierungs-Einstellungen (konsistent mit Black)
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

# Für cyclomatic complexity, entspricht pylint's R1260 etc.
[tool.ruff.lint.mccabe]
max-complexity = 10

# Import sorting (replaces isort)
[tool.ruff.lint.isort]
known-first-party = ["middleware_api"]
force-single-line = false
combine-as-imports = true

# Black and isort replaced by ruff format - configurations removed to avoid conflicts

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used. Do not skip shell injection (B601) to ensure security.

# Docstring-Regeln aktivieren, damit es wie pylint C0114/15/16 meckert
[tool.ruff.lint.pydocstyle]
convention = "pep257" # oder "numpy", oder "google"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring - bereits durch ruff D100 abgedeckt
    "too-few-public-methods",  # oft bei Test-Klassen nicht relevant
]
